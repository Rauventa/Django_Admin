# Generated by Django 3.1.5 on 2021-01-13 20:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперпользователь')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall_number', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Номер зала')),
                ('table_number', models.PositiveSmallIntegerField(verbose_name='Номер стола')),
                ('max_places', models.PositiveSmallIntegerField(verbose_name='Максимальное количество мест')),
                ('image', models.ImageField(blank=True, null=True, upload_to='places_images/', verbose_name='Фото стола')),
            ],
            options={
                'verbose_name': 'место',
                'verbose_name_plural': 'Места',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurants', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'ресторан',
                'verbose_name_plural': 'Рестораны',
            },
        ),
        migrations.CreateModel(
            name='RestaurantImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='restaurant_images/', verbose_name='Фото ресторана')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_images', to='core.restaurant', verbose_name='Ресторан')),
            ],
            options={
                'verbose_name': 'фото ресторана',
                'verbose_name_plural': 'Фото ресторанов',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_at', models.DateTimeField(verbose_name='Зарезервировано на')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('name', models.CharField(max_length=100, verbose_name='Бронь на имя')),
                ('places', models.PositiveSmallIntegerField(verbose_name='Количество мест')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='core.place', verbose_name='Место')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='core.restaurant', verbose_name='Ресторан')),
            ],
            options={
                'verbose_name': 'бронь',
                'verbose_name_plural': 'Брони',
            },
        ),
        migrations.AddField(
            model_name='place',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='core.restaurant', verbose_name='Ресторан'),
        ),
    ]
